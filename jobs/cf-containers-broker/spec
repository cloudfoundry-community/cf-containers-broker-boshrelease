---
name: cf-containers-broker

packages:
- ruby-2.4.6-r0.16.0
- cf-containers-broker

templates:
  bin/ctl.sh: bin/ctl.sh
  config/bpm.yml: config/bpm.yml
  config/settings.yml: config/settings.yml
  config/unicorn.conf.rb: config/unicorn.conf.rb

# Documentation https://bosh.io/docs/links.html
# Tutorial      https://gist.github.com/Amit-PivotalLabs/c39528248b8cdc4ba8e347f8aa68abb6
consumes: []

provides:
- name: cf-containers-broker
  type: servicebroker
  properties:
  - username
  - password
  - ssl_enabled
  - port
  - external_host
  - name
  - services

properties:
  username:
    description: "Broker's basic auth username"
  password:
    description: "Broker's basic auth password"
  port:
    description: "Unicorn listen port"
    default: "5555"

  name:
    description: "Register broker with this name"
    default: docker
  services:
    description: "Services and plans offered by the broker"

  external_host:
    description: "Explicit host for dashboard URLs and service broker registration"
  cf.api_url:
    description: "URL of the CloudFoundry Cloud Controller for user auth to dashboards"

  unicorn.worker_processes:
    description: "Unicorn worker processes. If the number of worker processes > 1 then you must disable the allocate_docker_host_ports property"
    default: "1"
  cookie_secret:
    description: "A unique secret key, used to sign sessions"
  session_expiry:
    description: "Session expiry time of the session"
    default: "86400"
  external_ip:
    description: "External IP address used to register the broker"
  ssl_enabled:
    description: "Determines use of https in dashboard url and in callback uri for calls to UAA"
    default: false
  skip_ssl_validation:
    description: "Determines whether dashboard verifies SSL certificates when communicating with Cloud Controller and UAA"
    default: true
  docker_url:
    description: "Docker URL (IP/Socket)"
    default: "unix:///var/vcap/data/sys/run/docker/docker.sock"
  max_containers:
    description: "Max number of containers"
    default: '0'
  allocate_docker_host_ports:
    description: "Allocate Docker host ports when creating a container"
    default: true
  enable_host_port_envvar:
    description: |-
      If provisioning services with "allocate_docker_host_ports: true"
      you can optionally enable the addition of a DOCKER_HOST_PORT_nnnn env var
      for each exposed port.
      This will create the container and then recreate the container with an additional
      DOCKER_HOST_PORT_nnnn environment variable for each exposed port.
      If you wish to disable this two-step provisioning process, set to true
    default: false
  fetch_images:
    description: "Fetch new/updated container images on restart"
    default: true
  update_containers:
    description: "Restart all containers with latest configuration/image on restart"
    default: true

  env.http_proxy:
    description: "HTTP proxy"
  env.https_proxy:
    description: "HTTPS proxy"
  env.no_proxy:
    description: "List of comma-separated hosts to skip connecting to the proxy"
